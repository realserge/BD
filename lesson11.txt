	


	-- 1. Создайте таблицу logs типа Archive. Пусть при каждом создании записи
	-- в таблицах users, catalogs и products в таблицу logs помещается время и дата
	-- создания записи, название таблицы, идентификатор первичного ключа
	-- и содержимое поля name.
	

	CREATE TABLE logs (
		id INT UNSIGNED NOT NULL AUTO_INCREMENT,
		create_ts DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
		table_name VARCHAR(50) NOT NULL,
		row_id INT UNSIGNED NOT NULL,
		name VARCHAR(100),
		PRIMARY KEY (id)
	) ENGINE=Archive;
	

	DELIMITER //
	CREATE TRIGGER users_log AFTER INSERT ON users
	FOR EACH ROW
	BEGIN
		INSERT INTO logs (table_name, row_id, name)
			VALUES ('users', NEW.id, NEW.name);
	END //
	CREATE TRIGGER catalogs_log AFTER INSERT ON catalogs
	FOR EACH ROW
	BEGIN
		INSERT INTO logs (table_name, row_id, name)
			VALUES ('catalogs', NEW.id, NEW.name);
	END //
	CREATE TRIGGER products_log AFTER INSERT ON products
	FOR EACH ROW
	BEGIN
		INSERT INTO logs (table_name, row_id, name)
			VALUES ('products', NEW.id, NEW.name);
	END //
	DELIMITER ;


	-- 1. В базе данных Redis подберите коллекцию для подсчета посещений с определенных
	-- IP-адресов.
	
	HINCRBY addresses '127.0.0.1' 1 -- увеличиваем на 1 для IP '127.0.0.1'
	HINCRBY addresses '127.0.0.2' 1 -- увеличиваем на 1 для IP '127.0.0.2'
	HGETALL addresses  -- показать ключи и значения хеш-таблицы addresses  
	

	HGET addresses '127.0.0.1' -- получить число посещений для IP '127.0.0.1'
	

	-- 2. При помощи базы данных Redis решите задачу поиска имени пользователя по электронному
	--  адресу и наоборот, поиск электронного адреса пользователя по его имени.
		
	HSET emails 'igor' 'igorsimdyanov@gmail.com'
	HSET emails 'sergey' 'sergey@gmail.com'
	HSET emails 'olga' 'olga@mail.ru'
	

	HGET emails 'igor'
	

	HSET users 'igorsimdyanov@gmail.com' 'igor'
	HSET users 'sergey@gmail.com' 'sergey'
	HSET users 'olga@mail.ru' 'olga'
	

	HGET users 'olga@mail.ru'
	

	-- 3. Организуйте хранение категорий и товарных позиций учебной базы данных shop в СУБД
	--  MongoDB.
	
	
	use shop
	

	db.createCollection('catalogs')
	db.createCollection('products')
	

	db.catalogs.insert({name: 'Процессоры'})
	db.catalogs.insert({name: 'Мат.платы'})
	db.catalogs.insert({name: 'Видеокарты'})
	

	db.products.insert(
	  {
	    name: 'Intel Core i3-8100',
	    description: 'Процессор для настольных персональных компьютеров, основанных на платформе Intel.',
	    price: 7890.00,
	    catalog_id: new ObjectId("5b56c73f88f700498cbdc56b")
	  }
	);
	

	db.products.insert(
	  {
	    name: 'Intel Core i5-7400',
	    description: 'Процессор для настольных персональных компьютеров, основанных на платформе Intel.',
	    price: 12700.00,
	    catalog_id: new ObjectId("5b56c73f88f700498cbdc56b")
	  }
	);
	

	db.products.insert(
	  {
	    name: 'ASUS ROG MAXIMUS X HERO',
	    description: 'Материнская плата ASUS ROG MAXIMUS X HERO, Z370, Socket 1151-V2, DDR4, ATX',
	    price: 19310.00,
	    catalog_id: new ObjectId("5b56c74788f700498cbdc56c")
	  }
	);
	

	db.products.find()
	

	db.products.find({catalog_id: ObjectId("5b56c73f88f700498cbdc56bdb")})

